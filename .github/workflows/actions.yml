name: Go

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Go 1.22
        uses: actions/setup-go@v3
        with:
          go-version: 1.22

      - name: Cache Go modules
        uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      # Agregado: Paso para actualizar dependencias con go mod tidy
      - name: Update dependencies
        run: go mod tidy

      - name: Test with Coverage
        run: go test ./... -coverprofile=coverage.txt -covermode=atomic

      - name: Check Coverage
        run: |
          go tool cover -func=coverage.txt -o coverage-summary.txt
          COVERAGE=$(go tool cover -func=coverage.txt | grep total: | awk '{print substr($3, 1, length($3)-1)}')
          echo "Total test coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 60" |bc -l) )); then
            echo "Test coverage is below 60%"
            exit 1
          fi
        env:
          GO111MODULE: on

      - name: Install golangci-lint
        run: curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin latest

      - name: Run golangci-lint
        run: golangci-lint run ./...
        env:
          GO111MODULE: on

      - name: Install pkgsite
        run: go install golang.org/x/pkgsite/cmd/pkgsite@latest

      - name: Start pkgsite
        run: |
          nohup pkgsite -http=:8080 > pkgsite.log 2>&1 &
          sleep 20  # Esperar a que el servidor se inicie

      - name: Check pkgsite log
        run: cat pkgsite.log

      - name: Download GoDoc
        run: |
          mkdir -p docs
          wget -r -np -P docs -nH --cut-dirs=1 http://localhost:8080/pkg/github.com/pzentenoe/gorm-connection/sql/

      - name: Deploy to GitHub Pages
        if: github.ref == 'refs/heads/main'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./docs

#      - name: Install godoc
#        run: go install golang.org/x/tools/cmd/godoc@latest

#      - name: Generate GoDoc
#        run: |
#          mkdir -p docs
#          godoc -http=:6060 &
#          sleep 10
#          wget -r -np -P docs -nH --cut-dirs=1 http://localhost:6060/pkg/github.com/pzentenoe/gorm-connection/sql/
#
#      - name: Deploy to GitHub Pages
#        if: github.ref == 'refs/heads/main'
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: ./docs


#      - name: Install godocdown
#        run: go install github.com/robertkrimen/godocdown/godocdown@latest
#
#      - name: Install Pandoc
#        run: sudo apt-get install -y pandoc
#
#      - name: Generate GoDoc
#        run: |
#          mkdir -p docs
#          godocdown -output docs/doc.md ./sql
#          pandoc docs/doc.md -o docs/index.html
#
#      - name: Deploy to GitHub Pages
#        if: github.ref == 'refs/heads/main'
#        uses: peaceiris/actions-gh-pages@v3
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: ./docs
